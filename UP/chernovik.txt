 part1

\subsection{Настройка Raspberry Pi}
\url{https://discuss.ardupilot.org/t/indoor-autonomous-flight-with-arducopter-ros-and-aruco-boards-detection/34699}

первоисточник 

\url{https://github.com/ArduPilot/ardupilot\_wiki/blob/master/dev/source/docs/ros-aruco-detection.rst}

\subsection{Настройка ardupilot}
Прошила через qgroundcontrol на pixracer r15 ardupilot, произвела первоначальную настройку-выбрала тип рамы, откалибровала датчики.
Указала следующие параметры:
\begin{MyCode}
AHRS_EKF_TYPE 2
EKF2_ENABLE 1
EKF3_ENABLE 0
EK2_GPS_TYPE 3
EK2_POSNE_M_NSE 0.1
EK2_EXTNAV_DELAY 80
GPS_TYPE 0
COMPASS_USE 0
VISO_TYPE 0
\end{MyCode}
\subsection{Настройка rpi zero w}
Качаем последний образ стретч лайт отсюда:

http://www.pcds.fi/downloads/operatingsystem/debianbased/raspbian/archive/stretch/raspbian.stretch.html
\begin{MyCode}
\$ unzip -p 2018-11-13-raspbian-stretch-lite.zip
\$ sudo dd if=/home/qw/2018-11-13-raspbian-stretch-lite.img bs=4M of=/dev/sdd conv=fsync
\$ sync
\end{MyCode}

\begin{MyCode}
в /etc/wpa_supplicant/wpa_supplicant.conf
укажем
ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=RU

network={
	ssid="ИМЯ_ТОЧКИ_ДОСТУПА"
	psk=123456789
}
\end{MyCode}
Подключаем клавиатуру и монитор к  Raspberry через переходники, логинимся через pi/raspberry.
Поднимаем ssh :
\begin{MyCode}
\$ sudo systemctl enable ssh
\$ sudo systemctl start ssh
Перезагружаем Raspberry.
Это можно не делать, если создать в /boot файл ssh:
\$ sudo touch /boot/ssh
\$ reboot
\end{MyCode}
Подключаем малинку, даем минуты 2 на размышления и прогоняем на ПК тулзой nmap, какие устройства к роутеру подключены
\begin{MyCode}
\$ sudo nmap -sn 192.168.1.0/24
Находим
Nmap scan report for 192.168.1.148
Host is up (-0.062s latency).
MAC Address: B8:27:EB:D3:B7:09 (Raspberry Pi Foundation)
Nmap scan report for ikherty (192.168.1.28)
Host is up.
Nmap done: 256 IP addresses (4 hosts up) scanned in 4.42 seconds

192.168.1.148-адрес Raspberry.
\end{MyCode}

\begin{MyCode}
	Доставила пакеты:
	gstreamer1.0 
	gstreamer1.0-plugins-good (иначе ошибка при старте стрима WARNING: erroneous pipeline: no element "rtspsrc")
	
	ser2net, после установки необходимо изменить конфиг:
	/etc/ser2net.conf
	2000:raw:0:/dev/ttyAMA0:115200 8DATABITS NONE 1STOPBIT
	
	Склонировала: gst-rpicamsrc (https://github.com/thaytan/gst-rpicamsrc 27) to use rpicamsrc as source for gst-launch-1.0
\end{MyCode}
%https://discuss.ardupilot.org/t/indoor-autonomous-flight-with-arducopter-ros-and-aruco-boards-detection/34699/34

%https://www.raspberrypi.org/documentation/remote-access/ip-address.md

%https://habr.com/ru/post/419947/

Информация о камере:
\begin{MyCode}
\$ v4l2-ctl --list-formats-ext -d /dev/video0
\end{MyCode}

Запустили камеру:
$ sudo raspi-config
и выбрать enable camera

Работают, но с задержкой 600мс:
\begin{MyCode}
На rasbberry:
\$ raspivid -t 0 -h 720 -w 1080 -fps 25 -hf -b 2000000 -o - | gst-launch-1.0 -v fdsrc ! h264parse !  rtph264pay config-interval=1 pt=96 ! gdppay ! tcpserversink host=192.168.1.148 port=5000 

На ПК: 
\$ gst-launch-1.0 -v tcpclientsrc host=192.168.1.148 port=5000  ! gdpdepay !  rtph264depay ! avdec_h264 ! videoconvert ! autovideosink sync=false

%https://platypus-boats.readthedocs.io/en/latest/source/rpi/video/video-streaming-gstreamer.html

%https://pi.gbaman.info/?p=150
\end{MyCode}

Уменьшили задержку с помощью передачи udp пакетов. Теперь она 150мс:
Нужна установка gstreamer1.0-tools;
\begin{MyCode}
На ПК запускается:
\$ gst-launch-1.0 udpsrc port=5000 ! gdpdepay ! rtph264depay ! avdec_h264 ! videoconvert ! autovideosink sync=false

На Raspberry:
\$ gst-launch-1.0 rpicamsrc bitrate=1000000 ! 'video/x-h264,width=640,height=480' ! h264parse ! queue ! rtph264pay config-interval=1 pt=96 ! gdppay ! udpsink host=[IP ПК] port=5000

https://www.raspberrypi.org/forums/viewtopic.php?t=196176
\end{MyCode}

\begin{MyCode}
На raspberry собрали через make rpicamsrc,
запустили 
\$ gst-launch-1.0 -v rpicamsrc bitrate=10000000 rotation=180 exposure-mode=10 awb-mode=0 awb-gain-red=1 awb-gain-blue=2 iso=800 shutter-speed=10000 contrast=50 ! "image/jpeg,width=640,height=480,framerate=30/1" ! udpsink host=192.168.1.148 port=9000
\end{MyCode}

Собрали через каткин драйвер gscam, запустили roscore, осталось изменить лаунч и получить поток.
Для создания топиков необхходимо настроить маврос.

В /opt/ros/melodic/share/mavros/launch/apm.launch меняется параметр fcu\_url для общения с телеметрией по порту полетника с помощью ser2net proxy:
<arg name="fcu\_url" default="tcp://192.168.10.16:2000" />

\$ cd ~/catkin\_ws/src
\$ git clone https://github.com/jokla/aruco\_gridboard.git
\$ cd ..
\$ catkin\_make
\$ source devel/setup.bash
catkin\_make --only-pkg-with-deps <target\_package>

%https://code.google.com/archive/p/brown-ros-pkg/wikis/Quick_start_rosbridge_and_ROS.wiki

%https://discuss.cubepilot.org/t/indoor-autonomous-flight-with-cube-ros-and-aruco-board-ongoing/351/8


%https://docs.opencv.org/master/db/da9/tutorial_aruco_board_detection.html
%https://diydrones.com/group/voltarobots/forum/connect-telemetry-through-tcp-udp?commentId=7447824%3AComment%3A1590641
%https://stackoverflow.com/questions/7669240/webcam-streaming-using-gstreamer-over-udp


Для использования аппаратного кодирования:
PC(autovideosink sync=false not needed for gscam):
gst-launch-1.0 udpsrc port=5000 ! gdpdepay ! rtph264depay ! avdec\_h264 ! videoconvert ! autovideosink sync=false

RPI stream:
gst-launch-1.0 rpicamsrc bitrate=1000000 ! "video/x-raw,width=640,height=480,framerate=30/1" ! \
omxh264enc target-bitrate=1000000 control-rate=variable ! \
'video/x-h264,width=640,height=480'! h264parse ! queue ! \
rtph264pay config-interval=1 pt=96 ! gdppay ! udpsink host=192.168.1.253 port=5000


part2



\subsection{Запуск веб топика на виртуалке}
собираем пакет gscam 
git clone https://github.com/ros-drivers/gscam
сборка:
cmake -DGSTREAMER_VERSION_1_x=On

$ source ~/catkin-ws/devel/setup.bash
В одной вкладке $ roscore (если не запущен)

в roscd gscam $ export GSCAM_CONFIG="udpsrc port=5000 ! gdpdepay ! rtph264depay ! avdec_h264 ! videoconvert"
$ rosrun gscam gscam

На rpi: gst-launch-1.0 rpicamsrc bitrate=1000000 ! 'video/x-h264,width=640,height=480' ! h264parse ! queue ! rtph264pay config-interval=1 pt=96 ! gdppay ! udpsink host=192.168.1.53 port=5000
где =192.168.1.53 - ip ПК

На ПК: $ rosrun web_video_server web_video_server _port:=11315

На localhost:11315 появляется топик image_raw.
Задержка ~200мс, для уменьшения необходимо сменить кодек на *jpeg*

Для взаимодействия с clover необходимо изменить источник камеры в $ nano launch/main_camera.launch

\subsection{Запуск aruco\_gridboard}
tab-1 (запуск нод gscam и aruco\_gridboard по полученному топику): 
export GSCAM_CONFIG="udpsrc port=5000 ! gdpdepay ! rtph264depay ! avdec_h264 ! videoconvert"
roslaunch aruco_gridboard detection_rpicam.launch

tab-2 (запуск окружения маврос): roslaunch mavros apm.launch

tab-3 (The messages SET_GPS_GLOBAL_ORIGIN and a SET_HOME_POSITION are sent with a script before starting to use the system.): rosrun aruco_gridboard set_origin.py

tab-4 (запуск rviz на усмотрение): rosrun rviz rviz -d catkin_ws/src/aruco_gridboard/data/aruco_grid.rviz

запуск rpi
gst-launch-1.0 rpicamsrc bitrate=1000000 ! 'video/x-h264,width=640,height=480' ! h264parse ! queue ! rtph264pay config-interval=1 pt=96 ! gdppay ! udpsink host=192.168.1.53 port=5000

для задержки в 80мс на пк:\\
clever@clever-dev: gst-launch-1.0 udpsrc port=5000 ! "image/jpeg,width=640,height=480,framerate=30/1" ! jpegdec ! videoconvert ! autovideosink sync=false

на рпи:
gst-launch-1.0 rpicamsrc bitrate=10000000 iso=800 shutter-speed=10000 contrast=50 ! "image/jpeg,width=640,height=480,framerate=30/1" ! udpsink host=192.168.1.53 port=5000

export GSCAM_CONFIG="udpsrc port=5000 ! "image/jpeg,width=640,height=480,framerate=30/1" ! jpegdec ! videoconvert"
s$ rostopic echo /mavros/vision_pose/pose
